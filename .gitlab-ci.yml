stages:
  - lint
  - test
  - build

variables:
  NODE_ENV: test
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

default:
  image: node:20-alpine
  cache:
    key:
      files:
        - package-lock.json
        - package.json
    paths:
      - node_modules/
    policy: pull-push
  before_script:
    - if [ -f package-lock.json ]; then npm ci --no-audit --no-fund; else npm install --no-audit --no-fund; fi

lint:
  stage: lint
  script:
    - npx eslint . --ext .ts,.tsx --max-warnings=0

test:
  stage: test
  script:
    - npm test

build:
  stage: build
  image: node:20-alpine
  services:
    - name: docker:27.0.3-dind
      command: ["--tls=false", "--mtu=1460"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - apk add --no-cache docker-cli
    - if [ -f package-lock.json ]; then npm ci --no-audit --no-fund; else npm install --no-audit --no-fund; fi
  script:
    - npm run build
    - docker version
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
